swagger: '2.0'
info:
  description: This is our SMYL API
  version: 0.0.1
  title: Joanna API
  termsOfService: 'https://smylglobal.com/terms/'
  contact:
    email: joey.miller@me.com
  license:
    name: SMYL License 1.0
    url: 'https://smylglobal.com/licenses/LICENSE-1.0.html'
host: smyl.app
basePath: /v1
tags:
  - name: user
    description: Operations about user
  - name: lists
    description: lookup lists and their information
  - name: suggestions
    description: retrieve suggestions based on content
schemes:
  - https
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: email
          in: query
          description: The email for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid email/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
        - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  '/user/{id}':
    get:
      tags:
        - user
      summary: Get a user by ID
      description: ''
      operationId: getUserById
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: The ID of the user that needs to be fetched.
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid email supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update a user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: User that need to be updated
          required: true
          type: integer
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete a user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: The user that needs to be deleted
          required: true
          type: integer
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
  '/user/getUserbyEmail/{email}':
    get:
      tags:
        - user
      summary: Get a user by email
      description: ''
      operationId: getUserByEmail
      produces:
        - application/json
        - application/xml
      parameters:
        - name: email
          in: path
          description: The email of the user that needs to be fetched.
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid email supplied
        '404':
          description: User not found
  /lists/groupEmails:
    get:
      tags:
        - lists
      summary: Get defined group email addresses list
      description: ''
      operationId: getGroupEmails
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/groupEmails'
        '400':
          description: List is empty
  '/suggestions/{id}':
    get:
      tags:
        - suggestions
      summary: Get suggestions
      description: ''
      operationId: getSuggestions
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: the sender's id
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Suggestion'
        '400':
          description: Invalid information supplied
        '404':
          description: No suggestions found
securityDefinitions:
  smyl_auth:
    type: oauth2
    authorizationUrl: 'http://api.smylglobal.com/oauth/dialog'
    flow: implicit
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
        description: email address
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
      userPersonalityType:
        type: string
      lastLoggedIn:
        type: string
    xml:
      name: User
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  groupEmails:
    type: object
    properties:
      email:
        type: string
    xml:
      name: groupEmail
  Suggestion:
    type: object
    properties:
      id:
        type: integer
        format: int64
      guidanceNote:
        type: string
      content:
        type: string
      displayOrder:
        type: string
    xml:
      name: Suggestion
externalDocs:
  description: Find out more about SMYL
  url: 'https://smylglobal.com'
